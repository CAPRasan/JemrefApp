name: CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  scan_ruby:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for common Rails security vulnerabilities using static analysis
        run: bin/brakeman --no-pager

  scan_js:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for security vulnerabilities in JavaScript dependencies
        run: bin/importmap audit

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Lint code for consistent style
        run: bin/rubocop -f github

  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: my_database_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y libpq-dev

      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h localhost -p 5432 -U postgres; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 5
          done

      - name: Drop existing test database (if exists)
        env:
          PGPASSWORD: postgres
        run: |
          psql -h 127.0.0.1 -U postgres -c "DROP DATABASE IF EXISTS my_database_test;"

      - name: Set up database
        env:
          PGPASSWORD: postgres
        run: |
          psql -h localhost -U postgres -c "CREATE USER jemref WITH PASSWORD 'password';"
          psql -h localhost -U postgres -c "CREATE DATABASE my_database_test;"
          psql -h localhost -U postgres -c "ALTER USER jemref CREATEDB;"
          psql -h localhost -U postgres -c "GRANT ALL PRIVILEGES ON DATABASE my_database_test TO jemref;"
          
      - name: Install Chrome for system tests
        run: sudo apt-get install --no-install-recommends -y google-chrome-stable

      - name: Run tests
        env:
          RAILS_ENV: test
          PGPASSWORD: postgres
          PSQL_PASSWORD: "password"
        run: bin/rails db:create RAILS_ENV=test
